buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		// tag::build[]
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
		// end::build[]
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// tag::plugin[]
apply plugin: 'com.palantir.docker'
apply plugin: 'checkstyle'
// end::plugin[]
//This is used as the docker image prefix
group = 'com.shineSolutions'

bootJar {
	baseName = 'nab-preparation-transaction-docker'
	version =  '0.1.0'
}

// tag::task[]
task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}

tasks.withType(Checkstyle) {
 ignoreFailures = true
 reports {
 html.enabled = true
 }
}

docker {
	name "${project.group}/${bootJar.baseName}"
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}
// end::task[]s

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
	jcenter()
}

ext['springCloudVersion'] = 'Greenwich.M3'

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.flywaydb:flyway-core')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
	annotationProcessor("org.projectlombok:lombok")
	testCompile 'io.rest-assured:rest-assured:3.2.0'
	compileOnly("org.projectlombok:lombok")
	runtime('org.postgresql:postgresql')
	runtimeOnly('com.h2database:h2')
	compile("org.springframework.boot:spring-boot-starter-hateoas")
	compile("org.springframework.boot:spring-boot-starter-actuator")
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
 
test {
	systemProperty 'spring.profiles.active', 'dev'
}
